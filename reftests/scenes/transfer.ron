(
	resources: {
		"buffer.input": Buffer(
			size: 4,
			usage: (bits: 0x3), //TRANSFER_SRC | TRANSFER_DST
			data: "buffer.raw",
		),
		"buffer.output": Buffer(
			size: 4,
			usage: (bits: 0x2), //TRANSFER_DST
		),
		"image.input": Image(
			kind: D2(2, 1, 1, 1),
			num_levels: 1,
			format: Rgba8Unorm,
			usage: (bits: 0x1), //TRANSFER_SRC
			data: "image.raw",
		),
		"image.output": Image(
			kind: D2(1, 1, 1, 1),
			num_levels: 1,
			format: Rgba8Unorm,
			usage: (bits: 0x3), //TRANSFER_DST | TRANSFER_SRC
		),
	},
	jobs: {
		"copy-buf": Transfer(
			CopyBuffer(
				src: "buffer.input",
				dst: "buffer.output",
				regions: [
					(
						src: 0,
						dst: 0,
						size: 4,
					),
				],
			),
		),
		"copy-image": Transfer(
			CopyImage(
				src: "image.input",
				dst: "image.output",
				regions: [
					(
						src_subresource:  (
							aspects: (bits: 0x1), //COLOR
							level: 0,
							layers: (start: Some(0), end: Some(1)),
						),
						src_offset: (x: 0, y: 0, z: 0),
						dst_subresource:  (
							aspects: (bits: 0x1), //COLOR
							level: 0,
							layers: (start: Some(0), end: Some(1)),
						),
						dst_offset: (x: 0, y: 0, z: 0),
						extent: (
							width: 1,
							height: 1,
							depth: 1,
						),
					),
				],
			),
		),
		"copy-buf-image": Transfer(
			CopyBufferToImage(
				src: "buffer.input",
				dst: "image.output",
				regions: [
					(
						buffer_offset: 0,
						buffer_width: 1,
						buffer_height: 1,
						image_layers: (
							aspects: (bits: 0x1), //COLOR
							level: 0,
							layers: (start: Some(0), end: Some(1)),
						),
						image_offset: (x: 0, y: 0, z: 0),
						image_extent: (
							width: 1,
							height: 1,
							depth: 1,
						),
					),
				],
			),
		),
		"copy-image-buf": Transfer(
			CopyImageToBuffer(
				src: "image.input",
				dst: "buffer.output",
				regions: [
					(
						buffer_offset: 0,
						buffer_width: 1,
						buffer_height: 1,
						image_layers: (
							aspects: (bits: 0x1), //COLOR
							level: 0,
							layers: (start: Some(0), end: Some(1)),
						),
						image_offset: (x: 1, y: 0, z: 0),
						image_extent: (
							width: 1,
							height: 1,
							depth: 1,
						),
					),
				],
			),
		),
		"blit-image": Transfer(
			BlitImage(
				src: "image.input",
				dst: "image.output",
				filter: Linear,
				regions: [
					(
						src_subresource:  (
							aspects: (bits: 0x1), //COLOR
							level: 0,
							layers: (start: Some(0), end: Some(1)),
						),
						src_bounds: (
							start: (x: 0, y: 0, z: 0),
							end: (x: 2, y: 1, z: 1),
						),
						dst_subresource:  (
							aspects: (bits: 0x1), //COLOR
							level: 0,
							layers: (start: Some(0), end: Some(1)),
						),
						dst_bounds: (
							start: (x: 0, y: 0, z: 0),
							end: (x: 1, y: 1, z: 1),
						),
					),
				],
			),
		),
	}
)
