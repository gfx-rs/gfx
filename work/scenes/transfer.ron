(
	resources: {
		"buffer.input": Buffer(
			size: 4,
			usage: (bits: 0x3), //TRANSFER_SRC | TRANSFER_DST
			data: "buffer.raw",
		),
		"buffer.output": Buffer(
			size: 4,
			usage: (bits: 0x2), //TRANSFER_DST
		),
		"buffer.large": Buffer(
			size: 8,
			usage: (bits: 0x2), //TRANSFER_DST
			data: "image.raw",
		),
		"image.input": Image(
			kind: D2(2, 1, 1, 1),
			num_levels: 1,
			format: Rgba8Unorm,
			usage: (bits: 0x1), //TRANSFER_SRC
			data: "image.raw",
		),
		"image.output": Image(
			kind: D2(1, 1, 1, 1),
			num_levels: 1,
			format: Rgba8Unorm,
			usage: (bits: 0x3), //TRANSFER_DST | TRANSFER_SRC
		),
		"buffer.fill-8-bytes": Buffer(
			size: 8,
			usage: (bits: 0x3), //TRANSFER_SRC | TRANSFER_DST
			data: "fill-8-bytes.raw",
		),
		"buffer.fill-10-bytes": Buffer(
			size: 10,
			usage: (bits: 0x3), //TRANSFER_SRC | TRANSFER_DST
			data: "fill-10-bytes.raw",
		),
	},
	jobs: {
		"copy-buf": Transfer(
			commands: [
				CopyBuffer(
					src: "buffer.input",
					dst: "buffer.output",
					regions: [
						(
							src: 0,
							dst: 0,
							size: 4,
						),
					],
				),
			],
		),
		"copy-buf-cut": Transfer(
			commands: [
				CopyBuffer(
					src: "buffer.input",
					dst: "buffer.large",
					regions: [
						(
							src: 0,
							dst: 4,
							size: 2,
						),
					],
				),
			],
		),
		"copy-image": Transfer(
			commands: [
				CopyImage(
					src: "image.input",
					dst: "image.output",
					regions: [
						(
							src_subresource:  (
								aspects: (bits: 0x1), //COLOR
								level: 0,
								layer_start: 0,
								layer_count: None,
							),
							src_offset: (x: 0, y: 0, z: 0),
							dst_subresource:  (
								aspects: (bits: 0x1), //COLOR
								level: 0,
								layer_start: 0,
								layer_count: None,
							),
							dst_offset: (x: 0, y: 0, z: 0),
							extent: (
								width: 1,
								height: 1,
								depth: 1,
							),
						),
					],
				),
			],
		),
		"copy-buf-image": Transfer(
			commands: [
				CopyBufferToImage(
					src: "buffer.input",
					dst: "image.output",
					regions: [
						(
							buffer_offset: 0,
							buffer_width: 1,
							buffer_height: 1,
							image_layers: (
								aspects: (bits: 0x1), //COLOR
								level: 0,
								layer_start: 0,
								layer_count: None,
							),
							image_offset: (x: 0, y: 0, z: 0),
							image_extent: (
								width: 1,
								height: 1,
								depth: 1,
							),
						),
					],
				),
			],
		),
		"copy-image-buf": Transfer(
			commands: [
				CopyImageToBuffer(
					src: "image.input",
					dst: "buffer.output",
					regions: [
						(
							buffer_offset: 0,
							buffer_width: 1,
							buffer_height: 1,
							image_layers: (
								aspects: (bits: 0x1), //COLOR
								level: 0,
								layer_start: 0,
								layer_count: None,
							),
							image_offset: (x: 1, y: 0, z: 0),
							image_extent: (
								width: 1,
								height: 1,
								depth: 1,
							),
						),
					],
				),
			],
		),
		"clear-image": Transfer(
			commands: [
				ClearImage(
					image: "image.output",
					value: Color(Float((0.501, 0.501, 0.501, 0.501))),
					ranges: [
						(
							aspects: (bits: 0x1), //COLOR
							level_start: 0,
							level_count: None,
							layer_start: 0,
							layer_count: None,
						),
					],
				),
			],
		),
		"blit-image": Transfer(
			commands: [
				BlitImage(
					src: "image.input",
					dst: "image.output",
					filter: Linear,
					regions: [
						(
							src_subresource:  (
								aspects: (bits: 0x1), //COLOR
								level: 0,
								layer_start: 0,
								layer_count: None,
							),
							src_bounds: (
								start: (x: 0, y: 0, z: 0),
								end: (x: 2, y: 1, z: 1),
							),
							dst_subresource:  (
								aspects: (bits: 0x1), //COLOR
								level: 0,
								layer_start: 0,
								layer_count: None,
							),
							dst_bounds: (
								start: (x: 0, y: 0, z: 0),
								end: (x: 1, y: 1, z: 1),
							),
						),
					],
				),
			],
		),
		"fill-whole": Transfer(
			commands: [
				FillBuffer(
					buffer: "buffer.fill-8-bytes",
					offset: 0,
					size: None,
					data: 0xFF0000,
				),
			],
		),
		"fill-first": Transfer(
			commands: [
				FillBuffer(
					buffer: "buffer.fill-8-bytes",
					offset: 0,
					size: Some(4),
					data: 0xFF00,
				),
			],
		),
		"fill-last": Transfer(
			commands: [
				FillBuffer(
					buffer: "buffer.fill-8-bytes",
					offset: 4,
					size: Some(8),
					data: 0xFF,
				),
			]
		),
		"fill-whole-nearest-multiple": Transfer(
			commands: [
				FillBuffer(
					buffer: "buffer.fill-10-bytes",
					offset: 0,
					size: None,
					data: 0xFF,
				),
			],
		),
	}
)
